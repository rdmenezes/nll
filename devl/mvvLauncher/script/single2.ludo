import "core"
import "mvvDicomTools"
import "mvvForms"

class DicomSliceNaming
{
	int series;
	int sliceId;
	string lastSeriesUid;
   string directory;
   string output;
	
	void init()
	{
		series = 0;
		sliceId = 0;
		lastSeriesUid = "";
	}
	
	DicomSliceNaming( string outputPath )
	{
		init();
      output = outputPath;
	}
	
	string getName( DicomSlice slice )
	{
		string seriesUid = slice.mainAttributs.seriesInstanceUid;
		if ( seriesUid != lastSeriesUid )
		{
			series = series + 1;
			lastSeriesUid = seriesUid;
			sliceId = 0;

         // create the directory directory
         directory = toString( series ) + "." + slice.mainAttributs.modality + "." + slice.mainAttributs.seriesDescription;
         string cmd = "MD " + output + "\\\"" + directory + "\"";
         replace( cmd, "/", "\\" );
         system( "echo \"" + cmd + "\"" );
         system( cmd );
		} else {
			sliceId = sliceId + 1;
		}
		
		// here: customize the output
		return directory + "\\" + toString( series ) + "." + toString( sliceId ) + "." + slice.mainAttributs.modality + "." + slice.mainAttributs.seriesDescription + ".dcm";
	}
}

string inputPath;
string outputPath;

//inputPath = "G:\\ForLudo\\db173-0\\syngo1\\";
//outputPath = "c:\\tmpOut\\";

inputPath = "G:/ForLudo/db173-0/syngo1/";
outputPath = "c:/tmpOut/";

// read slices
int[] series;
DicomSlice[] slices = readDicomSlices( inputPath, series );

// finally export the DICOM slices
DicomSliceNaming naming( outputPath );
writeDicomSlices( slices, outputPath, naming.getName );	